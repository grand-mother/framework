#!/usr/bin/env python
import os
import subprocess
import sys


__all__ = ["pre_commit"]


def git(*args):
    """System git call"""
    command = "git " + " ".join(args)
    p = subprocess.Popen(
        command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    return p.communicate()


def get_top_directory():
    """Get the package top directory from git"""
    top, _ = git("rev-parse", "--show-toplevel")
    return top.strip()


def update_readme():
    """Update the package README"""
    content = """\
<!--
    This file is auto generated by the GRAND framework.
    Beware: any change to this file will be overwritten at next commit.
    One should edit the docs/README.md file instead.
-->
[![PyPI
version](https://img.shields.io/pypi/v/framework.svg)](https://pypi.org/project/framework)
![Python version](https://img.shields.io/badge/Python-2.7-brightgreen.svg)
![Coding style](https://img.shields.io/badge/style-PEP8-blue.svg)
[![Build status](https://travis-ci.com/grand-mother/framework.svg?branch=master)](https://travis-ci.com/grand-mother/framework)

"""

    top = get_top_directory()
    path = os.path.join(top, "docs", "README.md")
    with open(path, "r") as f:
        content += f.read()

    path = os.path.join(top, "README.md")
    with open(path, "w") as f:
        f.write(content)

    git("add","README.md")


def pre_commit():
    """Git hook for pre-processing a commit"""
    update_readme()
    sys.exit(0)
