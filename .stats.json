{"lines": {"blank": 249, "comment": 9, "docstring": 390, "code": 884}, "pep8": {"count": 94, "categories": [["1", "E122", "continuation line missing indentation or outdented"], ["2", "E125", "continuation line with same indent as next logical line"], ["5", "E128", "continuation line under-indented for visual indent"], ["2", "E131", "continuation line unaligned for hanging indent"], ["7", "E201", "whitespace after '{'"], ["6", "E202", "whitespace before '}'"], ["1", "E203", "whitespace before ':'"], ["2", "E231", "missing whitespace after ','"], ["48", "E251", "unexpected spaces around keyword / parameter equals"], ["1", "E302", "expected 2 blank lines, found 1"], ["1", "E303", "too many blank lines (2)"], ["1", "E306", "expected 1 blank line before a nested definition, found 0"], ["4", "E501", "line too long (80 > 79 characters)"], ["2", "E701", "multiple statements on one line (colon)"], ["5", "E722", "do not use bare 'except'"], ["5", "W291", "trailing whitespace"], ["1", "W391", "blank line at end of file"]]}, "doc": {"statistics": {"framework/hooks.py": {"tokens": {"git": [51, ["Undocumented parameter `*args`"]], "count_lines_in": [63, ["Undocumented parameter `file_`"]], "count_lines": [104, ["Undocumented parameter `path`"]], "check_style": [126, ["Undocumented parameter `path`"]], "gather_doc": [138, ["Undocumented parameter `package_name`", "Undocumented parameter `package_dir`"]], "analyse_package": [529, ["Undocumented parameter `package_name`", "Undocumented parameter `package_dir`"]], "update_readme": [553, ["Undocumented parameter `package_name`", "Undocumented parameter `stats`", "Undocumented parameter `package_dir`", "Undocumented parameter `readme`"]], "add_banner": [639, ["Undocumented parameter `msg`"]], "prepare_commit_msg": [683, ["Undocumented parameter `file_`"]]}, "n_errors": 14, "n_tokens": 36}, "framework/init.py": {"tokens": {"copy": [46, ["Undocumented parameter `data_dir`", "Undocumented parameter `force`", "Undocumented parameter `file_`", "Undocumented parameter `target_dir`"]], "mkdir": [53, ["Undocumented parameter `path`"]], "write_coverage_config": [59, ["Undocumented parameter `path`", "Undocumented parameter `package_name`"]], "write_readme": [84, ["Undocumented parameter `dist_name`", "Undocumented parameter `git_name`", "Undocumented parameter `description`", "Undocumented parameter `title`", "Undocumented parameter `path`"]], "write_source": [133, ["Undocumented parameter `description`", "Undocumented parameter `path`"]], "write_setup": [172, ["Undocumented parameter `path`"]], "write_tests_init": [209, ["Undocumented parameter `path`", "Undocumented parameter `package_name`"]], "write_tests_main": [223, ["Undocumented parameter `path`", "Undocumented parameter `package_name`"]], "write_tests_version": [253, ["Undocumented parameter `path`", "Undocumented parameter `package_name`"]], "add_git_hook": [294, ["Undocumented parameter `git_dir`", "Undocumented parameter `hook_name`"]]}, "n_errors": 23, "n_tokens": 44}, "framework/setup.py": {"tokens": {"get_alts": [125, ["Undocumented parameter `package_name`"]], "parse_readme": [135, ["Undocumented parameter `path`"]], "DistClean": [160, ["Undocumented attribute `user_options`"]], "DistClean.initialize_options": [165, ["Missing description"]], "DistClean.finalize_options": [168, ["Missing description"]], "DistClean.run": [171, ["Missing description"]], "setup_package": [207, ["Undocumented parameter `file_`", "Undocumented parameter `**kwargs`", "Undocumented parameter `numeric_version`", "Undocumented parameter `extra_classifiers`"]]}, "n_errors": 10, "n_tokens": 16}, "framework/test.py": {"tokens": {"RunContext.__init__": [33, ["Undocumented parameter `*args`", "Missing description"]], "RunContext.__enter__": [41, ["Missing description"]], "RunContext.__exit__": [48, ["Undocumented parameter `exc_type`", "Undocumented parameter `exc_value`", "Undocumented parameter `traceback`", "Missing description"]]}, "n_errors": 7, "n_tokens": 8}}, "doc": "Common framework for GRAND packages", "classes": {"RunContext": [31, "Context for encapsulating an executable call", {"attributes": {}, "methods": {"__init__": [33, "", {"parameters": {"*args": null}, "prototype": "self, *args"}], "__enter__": [41, "", {"parameters": {}, "prototype": "self"}], "__exit__": [48, "", {"parameters": {"exc_type": null, "exc_value": null, "traceback": null}, "prototype": "self, exc_type, exc_value, traceback"}]}, "bases": []}, "framework/test.py"]}, "definitions": {}, "functions": {"setup_package": [207, "Wrapper of the distutils.setup function, for GRAND packages", {"parameters": {"file_": null, "numeric_version": null, "extra_classifiers": null, "**kwargs": null}, "prototype": "file_, numeric_version, extra_classifiers=None, **kwargs"}, "framework/setup.py"], "git": [51, "System git call", {"parameters": {"*args": null}, "prototype": "*args"}, "framework/hooks.py"]}, "imports": {"1": {"setup": [["*", "*"]], "test": [["*", "*"]], "hooks": [["git", "git"]]}}, "path": "framework/__init__.py", "__all__": ["__version__", "__githash__", "git", "RunContext", "setup_package"], "modules": {"hooks": {"doc": "Git hooks providing local CI", "classes": {}, "definitions": {}, "functions": {"git": [51, "System git call", {"parameters": {"*args": null}, "prototype": "*args"}], "get_top_directory": [57, "Get the package top directory from git", {"parameters": {}, "prototype": ""}], "count_lines_in": [63, "Count the number of code lines in a Python file", {"parameters": {"file_": null}, "prototype": "file_"}], "count_lines": [104, "Count the number of Python code lines, recursively", {"parameters": {"path": null}, "prototype": "path"}], "check_style": [126, "Check the conformity to PEP8", {"parameters": {"path": null}, "prototype": "path"}], "gather_doc": [138, "Gather public objects and their associated docstrings", {"parameters": {"package_dir": null, "package_name": null}, "prototype": "package_dir, package_name"}], "analyse_package": [529, "Analyse the content of a package and dump statistics", {"parameters": {"package_dir": null, "package_name": null}, "prototype": "package_dir, package_name"}], "update_readme": [553, "Update the package README", {"parameters": {"package_dir": null, "package_name": null, "stats": null, "readme": null}, "prototype": "package_dir, package_name, stats, readme"}], "add_banner": [639, "Add a banner to git commit messages", {"parameters": {"msg": null}, "prototype": "msg"}], "pre_commit": [655, "Git hook for pre-processing a commit", {"parameters": {}, "prototype": ""}], "prepare_commit_msg": [683, "Git hook for preparing the commit message", {"parameters": {"file_": null}, "prototype": "file_=None"}]}, "imports": {}, "path": "framework/hooks.py", "__all__": ["pre_commit", "prepare_commit_msg"]}, "init": {"doc": "Initialiser for GRAND packages", "classes": {}, "definitions": {}, "functions": {"get_data_dir": [39, "Get the absolute path to the package data files", {"parameters": {}, "prototype": ""}], "copy": [46, "Copy a file out of the data folder to a target directory", {"parameters": {"data_dir": null, "target_dir": null, "file_": null, "force": null}, "prototype": "data_dir, target_dir, file_, force=False"}], "mkdir": [53, "Create directories recursively if they don't exist", {"parameters": {"path": null}, "prototype": "path"}], "write_coverage_config": [59, "Write a default config file for `coverage`", {"parameters": {"path": null, "package_name": null}, "prototype": "path, package_name"}], "write_readme": [84, "Write a default README file", {"parameters": {"path": null, "git_name": null, "dist_name": null, "title": null, "description": null}, "prototype": "path, git_name, dist_name, title, description"}], "write_source": [133, "Write a default __init__.py file", {"parameters": {"path": null, "description": null}, "prototype": "path, description"}], "write_setup": [172, "Write a default setup.py file for the base package", {"parameters": {"path": null}, "prototype": "path"}], "write_tests_init": [209, "Write a default __init__.py file for the tests package", {"parameters": {"path": null, "package_name": null}, "prototype": "path, package_name"}], "write_tests_main": [223, "Write a default __main__.py file for the tests package", {"parameters": {"path": null, "package_name": null}, "prototype": "path, package_name"}], "write_tests_version": [253, "Write a default test_version.py file for the tests package", {"parameters": {"path": null, "package_name": null}, "prototype": "path, package_name"}], "add_git_hook": [294, "Add a hook for managing git workflow", {"parameters": {"git_dir": null, "hook_name": null}, "prototype": "git_dir, hook_name"}], "main": [315, "Parse CLI arguments and initialise a local package", {"parameters": {}, "prototype": ""}]}, "imports": {}, "path": "framework/init.py", "__all__": ["main"]}, "setup": {"doc": "Encapsulation of setuptools for GRAND", "classes": {"DistClean": [160, "Custom clean command, to really clean the repo", {"attributes": {"user_options": [163, "", null]}, "methods": {"initialize_options": [165, "", {"parameters": {}, "prototype": "self"}], "finalize_options": [168, "", {"parameters": {}, "prototype": "self"}], "run": [171, "", {"parameters": {}, "prototype": "self"}]}, "bases": ["Command"]}]}, "definitions": {"DEFAULT_CLASSIFIERS": [41, "Default PyPi classifiers for GRAND packages\n", null]}, "functions": {"make_version_module": [57, "Build the version.py module for the distribution\n\n### This is an example of documentation\n**Any** thing could go here. For example as:\n```c\n    int main(int nargc, char * argv[])\n    {\n        return 0;\n    }\n```\n- But this is ~~not~~.\n", {"parameters": {"package": ["str", "The git package name"], "version": ["str", "The full version tag"]}, "prototype": "package, version", "returns": [["None", "This is nasty", "toto"], ["str", "Guess?", ""]], "yields": [["None", "This is nasty", "toto"], ["str", "Guess?", ""]], "raises": [["RuntimeError", "Never do that again"], ["FatalMistake", "Try again"]]}], "get_alts": [125, "Get alternative names for the package", {"parameters": {"package_name": null}, "prototype": "package_name"}], "parse_readme": [135, "Parse some meta data from the README.md", {"parameters": {"path": null}, "prototype": "path=None"}], "setup_package": [207, "Wrapper of the distutils.setup function, for GRAND packages", {"parameters": {"file_": null, "numeric_version": null, "extra_classifiers": null, "**kwargs": null}, "prototype": "file_, numeric_version, extra_classifiers=None, **kwargs"}]}, "imports": {}, "path": "framework/setup.py", "__all__": ["setup_package"]}, "test": {"doc": "Utilities for unit tests", "classes": {"RunContext": [31, "Context for encapsulating an executable call", {"attributes": {}, "methods": {"__init__": [33, "", {"parameters": {"*args": null}, "prototype": "self, *args"}], "__enter__": [41, "", {"parameters": {}, "prototype": "self"}], "__exit__": [48, "", {"parameters": {"exc_type": null, "exc_value": null, "traceback": null}, "prototype": "self, exc_type, exc_value, traceback"}]}, "bases": []}]}, "definitions": {}, "functions": {}, "imports": {}, "path": "framework/test.py", "__all__": ["RunContext"]}}}}